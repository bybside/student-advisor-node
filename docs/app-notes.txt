To-Do:
    - write unit tests for all controllers (https://jestjs.io/)
    - should career fit tables (CareerFitByStudent, CareerFitByOccupation) define columns containing calculations as int or bigint?
      - JSON cannot serialize bigints and so must be cast to int before being served in DTOs
      - should db store this data as ints to save the conversion step before serializing DTOs?
      - will scores or ranks ever exceed the 32-bit integer threshold? Probably not.
    - update project directory structure to meet Nest documentation recommendations
    - create expansive dummy data to test career fit and snapshot generation viability
    - logic for generating school snapshot:
	    - aggregated using all data in database (assume all data is for one school)
    - each school lives in its own container?
      - schools should not share data unless they choose to

Application Design:
    - in order of implementation level (following the data mapper design pattern):
      1. config (flat-file): defines application config info (db connection info/credentials + Flask config)
      2. Config (class): parses and makes application config info accessible to application  
      3. DbContext (class): defines db connection string and handles db sessions
      4. <model_name> (class): defines a model class for use by SQLAlchemy ORM
      5. <controller_name> (<controller_name>.py): defines application endpoints (APIs)
      6. web server (app.py): exposes endpoints defined in controller files

Notes:
    - Student X is a high school upperclassman
    - 3 Questions for Student X:
      - what do former students like Student X do for a living?
      - what do former student like Student X have a college degree in?
      - for former students like Student X, is occupation outcome correlated with GPA?
    
    - Student Snapshot:
      - class rank (based on GPA)*
      - historical rank (based on GPA)*
      - career fit (based on calculated similarity score by student & occupation)*
      - cumulative performance by subject*
    - School Snapshot:
      - historical class ranking:
        - average median-salary by graduating class (given industry data)
        - average gpa by graduating class
      - most common occupation (occupation_1: %, occupation_2: %, occupation_3: %)
      - historical gpa analysis (mean|median|mode for all recorded students)

* - resolved/implemented